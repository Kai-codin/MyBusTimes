# Generated by Django 5.2.3 on 2025-07-06 23:30

import django.db.models.deletion
import fleet.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        ('routes', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='helperPerm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('perm_name', models.CharField(help_text='Name of the permission', max_length=50, unique=True)),
                ('perms_level', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1, help_text='Permission level from 1 (lowest) to 5 (highest)')),
            ],
        ),
        migrations.CreateModel(
            name='operatorType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('operator_type_name', models.CharField(max_length=50)),
                ('published', models.BooleanField(default=False, help_text='Mark this operator type as published to be used in the system.')),
            ],
        ),
        migrations.CreateModel(
            name='group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=50, unique=True)),
                ('private', models.BooleanField(default=False)),
                ('group_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='liverie',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255)),
                ('colour', fleet.fields.ColourField(help_text='For the most simplified version of the livery', max_length=7)),
                ('left_css', fleet.fields.CSSField(blank=True, max_length=2048, verbose_name='Left CSS')),
                ('right_css', fleet.fields.CSSField(blank=True, max_length=2048, verbose_name='Right CSS')),
                ('text_colour', fleet.fields.ColourField(blank=True, max_length=7)),
                ('stroke_colour', fleet.fields.ColourField(blank=True, help_text='Use sparingly, often looks shit', max_length=7)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('published', models.BooleanField(default=False, help_text='Tick to include in the CSS and be able to apply this livery to vehicles')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='livery_added_by', to=settings.AUTH_USER_MODEL)),
                ('aproved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='livery_aproved_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'liveries',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='fleet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('in_service', models.BooleanField(default=True)),
                ('for_sale', models.BooleanField(default=False)),
                ('preserved', models.BooleanField(default=False)),
                ('on_load', models.BooleanField(default=False)),
                ('open_top', models.BooleanField(default=False)),
                ('fleet_number', models.CharField(max_length=50)),
                ('reg', models.CharField(blank=True, max_length=50)),
                ('prev_reg', models.TextField(blank=True)),
                ('colour', models.CharField(blank=True, max_length=50)),
                ('type_details', models.CharField(blank=True, max_length=50)),
                ('last_tracked_date', models.DateTimeField(blank=True, null=True)),
                ('last_tracked_route', models.CharField(blank=True, max_length=50)),
                ('branding', models.CharField(blank=True, max_length=50)),
                ('depot', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('length', models.CharField(blank=True, max_length=50, null=True)),
                ('features', models.JSONField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fleet_modified_by', to=settings.AUTH_USER_MODEL)),
                ('livery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fleet.liverie')),
            ],
        ),
        migrations.CreateModel(
            name='MBTOperator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('operator_name', models.CharField(max_length=50)),
                ('operator_code', models.CharField()),
                ('operator_details', models.JSONField(blank=True, default={'game': 'OMSI2', 'transit_authorities': 'TFL, TfGM', 'twitter': '@example', 'type': 'real-company', 'website': 'https://example.com'}, null=True)),
                ('private', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('show_trip_id', models.BooleanField(default=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fleet.group')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
                ('region', models.ManyToManyField(related_name='operators', to='main.region')),
            ],
        ),
        migrations.CreateModel(
            name='helper',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('helper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='helper_users', to=settings.AUTH_USER_MODEL)),
                ('perms', models.ManyToManyField(related_name='helper_perms', to='fleet.helperperm')),
                ('operator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='helper_operator', to='fleet.mbtoperator')),
            ],
        ),
        migrations.CreateModel(
            name='fleetChange',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('up_vote', models.PositiveIntegerField(default=0)),
                ('down_vote', models.PositiveIntegerField(default=0)),
                ('changes', models.TextField(blank=True)),
                ('message', models.TextField(blank=True)),
                ('disapproved_reason', models.TextField(blank=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('pending', models.BooleanField(default=True)),
                ('disapproved', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_approved_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_user', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_vehicle_id', to='fleet.fleet')),
                ('voters', models.ManyToManyField(blank=True, related_name='history_voters', to=settings.AUTH_USER_MODEL)),
                ('operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_operator_id', to='fleet.mbtoperator')),
            ],
        ),
        migrations.AddField(
            model_name='fleet',
            name='loan_operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fleet_loan_operator', to='fleet.mbtoperator'),
        ),
        migrations.AddField(
            model_name='fleet',
            name='operator',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='fleet_operator', to='fleet.mbtoperator'),
        ),
        migrations.CreateModel(
            name='companyUpdate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('update_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('routes', models.ManyToManyField(blank=True, related_name='company_updates', to='routes.route')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_update_operator', to='fleet.mbtoperator')),
            ],
        ),
        migrations.CreateModel(
            name='organisation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('organisation_name', models.CharField(max_length=50)),
                ('organisation_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisation_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='mbtoperator',
            name='organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fleet.organisation'),
        ),
        migrations.CreateModel(
            name='reservedOperatorName',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('operator_name', models.CharField(max_length=50)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reserved_operator_name_approved_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserved_operator_name_owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ticket',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_name', models.CharField(max_length=50)),
                ('ticket_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ticket_details', models.TextField(blank=True)),
                ('zone', models.CharField(blank=True, help_text="Zone for the ticket (e.g., 'Zone 1', 'Zone A').", max_length=50)),
                ('valid_for_days', models.PositiveIntegerField(blank=True, null=True)),
                ('single_use', models.BooleanField(default=False, help_text='If true, this ticket can only be used once.')),
                ('name_on_ticketer', models.CharField(blank=True, help_text='Name to be displayed on the ticketer for this ticket.', max_length=50)),
                ('colour_on_ticketer', fleet.fields.ColourField(blank=True, help_text='Colour of the ticket in hex format (e.g., #FF5733).', max_length=7)),
                ('ticket_category', models.CharField(blank=True, help_text="Category of the ticket (e.g., 'Adult', 'Child', 'Senior').", max_length=100)),
                ('hidden_on_ticketer', models.BooleanField(default=False, help_text='If true, this ticket will not be displayed on the ticketer.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_operator', to='fleet.mbtoperator')),
            ],
        ),
        migrations.CreateModel(
            name='vehicleType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('double_decker', models.BooleanField(default=False)),
                ('lengths', models.TextField(blank=True)),
                ('type', models.CharField(default='Bus', max_length=50)),
                ('fuel', models.CharField(default='Diesel', max_length=50)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='types_added_by', to=settings.AUTH_USER_MODEL)),
                ('aproved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='types_aproved_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='fleet',
            name='vehicleType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='fleet.vehicletype'),
        ),
    ]
