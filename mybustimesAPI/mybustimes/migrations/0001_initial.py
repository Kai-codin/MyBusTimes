# Generated by Django 5.2 on 2025-04-14 22:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import mybustimes.fields
import mybustimes.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_name', models.CharField(max_length=100)),
                ('ad_img', models.ImageField(upload_to='images/')),
                ('ad_link', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='badge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('badge_name', models.CharField(max_length=50)),
                ('badge_backgroud', models.TextField()),
                ('badge_text_color', models.CharField(max_length=7)),
                ('additional_css', models.TextField(blank=True, null=True)),
                ('self_asign', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='featureToggle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('enabled', models.BooleanField(default=True)),
                ('maintenance', models.BooleanField(default=False)),
                ('coming_soon', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=50)),
                ('group_owner', models.CharField(max_length=50)),
                ('private', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='helperPerm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('perm_name', models.CharField(max_length=50)),
                ('perms_level', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1, help_text='Permission level from 1 (lowest) to 5 (highest)')),
            ],
        ),
        migrations.CreateModel(
            name='organisation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('organisation_name', models.CharField(max_length=50)),
                ('organisation_owner', models.CharField(max_length=50)),
                ('private', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=100, unique=True)),
                ('region_code', models.CharField(max_length=3, unique=True)),
                ('region_country', models.CharField(default='England', max_length=100)),
                ('in_the', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='theme',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('theme_name', models.CharField(blank=True, max_length=50, null=True)),
                ('css', models.TextField()),
                ('main_colour', models.CharField(blank=True, max_length=50)),
                ('dark_theme', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('theme_id', models.IntegerField(default=1)),
                ('ticketer_code', models.CharField(blank=True, max_length=50, null=True)),
                ('static_ticketer_code', models.BooleanField(default=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('banned', models.BooleanField(default=False)),
                ('banned_date', models.DateTimeField(blank=True, null=True)),
                ('banned_reason', models.TextField(blank=True, null=True)),
                ('total_user_reports', models.PositiveIntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('badges', models.ManyToManyField(blank=True, related_name='badges', to='mybustimes.badge')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='fleet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('in_service', models.BooleanField(default=True)),
                ('for_sale', models.BooleanField(default=False)),
                ('preserved', models.BooleanField(default=False)),
                ('on_load', models.BooleanField(default=False)),
                ('open_top', models.BooleanField(default=False)),
                ('fleet_number', models.CharField(max_length=50)),
                ('reg', models.CharField(blank=True, max_length=50)),
                ('prev_reg', models.TextField(blank=True)),
                ('colour', models.CharField(blank=True, max_length=50)),
                ('type_details', models.CharField(blank=True, max_length=50)),
                ('last_tracked_date', models.DateTimeField(blank=True, null=True)),
                ('last_tracked_route', models.CharField(blank=True, max_length=50)),
                ('branding', models.CharField(blank=True, max_length=50)),
                ('depot', models.CharField(blank=True, max_length=50)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('length', models.CharField(blank=True, max_length=50)),
                ('features', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fleet_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='fleetChange',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('changes', models.TextField(blank=True)),
                ('message', models.TextField(blank=True)),
                ('disapproved_reason', models.TextField(blank=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('pending', models.BooleanField(default=True)),
                ('disapproved', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history_approved_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history_user', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mybustimes.fleet')),
            ],
        ),
        migrations.CreateModel(
            name='liverie',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('show_name', models.BooleanField(default=True)),
                ('colour', mybustimes.fields.ColourField(help_text='For the most simplified version of the livery', max_length=7)),
                ('left_css', mybustimes.fields.CSSField(blank=True, help_text='Automatically generated from colours and angle', max_length=1024, verbose_name='Left CSS')),
                ('right_css', mybustimes.fields.CSSField(blank=True, help_text='Should be a mirror image of the left CSS', max_length=1024, verbose_name='Right CSS')),
                ('white_text', models.BooleanField(default=False)),
                ('text_colour', mybustimes.fields.ColourField(blank=True, max_length=7)),
                ('stroke_colour', mybustimes.fields.ColourField(blank=True, help_text='Use sparingly, often looks shit', max_length=7)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('published', models.BooleanField(default=False, help_text='Tick to include in the CSS and be able to apply this livery to vehicles')),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livery_added_by', to=settings.AUTH_USER_MODEL)),
                ('aproved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livery_aproved_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'liveries',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='fleet',
            name='livery',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mybustimes.liverie'),
        ),
        migrations.CreateModel(
            name='MBTOperator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('operator_name', models.CharField(max_length=50)),
                ('operator_code', models.CharField(max_length=4)),
                ('operator_details', models.JSONField(blank=True, default={'game': 'OMSI2', 'twitter': '@example', 'type': 'real-company', 'website': 'https://example.com'}, null=True)),
                ('private', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=False)),
                ('show_trip_id', models.BooleanField(default=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mybustimes.group')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mybustimes.organisation')),
                ('region', models.ManyToManyField(related_name='operators', to='mybustimes.region')),
            ],
        ),
        migrations.CreateModel(
            name='helper',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('helper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helper_users', to=settings.AUTH_USER_MODEL)),
                ('perms', models.ManyToManyField(related_name='helper_perms', to='mybustimes.helperperm')),
                ('operator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='helper_operator', to='mybustimes.mbtoperator')),
            ],
        ),
        migrations.AddField(
            model_name='fleet',
            name='loan_operator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fleet_loan_operator', to='mybustimes.mbtoperator'),
        ),
        migrations.AddField(
            model_name='fleet',
            name='operator',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='fleet_operator', to='mybustimes.mbtoperator'),
        ),
        migrations.CreateModel(
            name='route',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('route_num', models.CharField(max_length=50)),
                ('route_name', models.CharField(blank=True, max_length=4, null=True)),
                ('route_details', models.JSONField(blank=True, default=mybustimes.models.default_route_details, null=True)),
                ('inboud_destination', models.CharField(blank=True, max_length=100, null=True)),
                ('outboud_destination', models.CharField(blank=True, max_length=100, null=True)),
                ('route_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mybustimes.mbtoperator')),
            ],
        ),
        migrations.CreateModel(
            name='type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=False)),
                ('double_decker', models.BooleanField(default=False)),
                ('lengths', models.TextField(blank=True)),
                ('type', models.CharField(default='Bus', max_length=50)),
                ('fuel', models.CharField(default='Diesel', max_length=50)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types_added_by', to=settings.AUTH_USER_MODEL)),
                ('aproved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types_aproved_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='fleet',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mybustimes.type'),
        ),
        migrations.CreateModel(
            name='update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('body', models.TextField()),
                ('tages', models.TextField()),
                ('link', models.TextField(blank=True, null=True)),
                ('readBy', models.ManyToManyField(blank=True, related_name='read_updates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
