name: MyBusTimes

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: mybustimes
          POSTGRES_USER: mybustimesdb
          POSTGRES_PASSWORD: postgres

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.12

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        cat <<EOF > .env
        SECRET_KEY=test-key
        DISCORD_BOT_TOKEN=test
        DISCORD_REPORTS_CHANNEL_ID=test
        DISCORD_FOR_SALE_WEBHOOK=test
        DISCORD_LIVERY_REQUESTS_CHANNEL_WEBHOOK=test
        DISCORD_OPERATOR_TYPE_REQUESTS_CHANNEL_WEBHOOK=test
        DISCORD_TYPE_REQUEST_WEBHOOK=test
        DISCORD_WEB_ERROR_WEBHOOK=test
        DISCORD_404_ERROR_WEBHOOK=test
        STRIPE_SECRET_KEY=test
        STRIPE_PUBLISHABLE_KEY=test
        STRIPE_WEBHOOK_SECRET=test
        STRIPE_SECRET_KEY_TEST=test
        STRIPE_PUBLISHABLE_KEY_TEST=test
        STRIPE_WEBHOOK_SECRET_TEST=test

        DB_NAME=mybustimes
        DB_USER=mybustimesdb
        DB_PASSWORD=postgres
        DB_HOST=postgres
        DB_PORT=5432
        EOF

    - name: Install dnsutils for nslookup
      run: sudo apt-get update && sudo apt-get install -y dnsutils

    - name: Check DNS for postgres
      run: nslookup postgres

    - name: Run migrations
      run: |
        set -a
        source .env
        set +a
        python manage.py migrate

    - name: Run tests
      run: |
        set -a
        source .env
        set +a
        python manage.py test
