<div class="fleet-edit-wrapper">
  <h1>Edit vehicle details</h1>
  <p>ID: <code><%= fleetData.id %></code></p><br>
  <p>Ticket machine code:</p>
  <code><%= fleetData.fleet_number %> - <%= fleetData.reg %></code><br><br>
  <form action="/operator/update-bus/<%= fleetData.id %>" method="POST">
    <input type="hidden" id="user" name="user" value="<%= userData[0].id %>"><br>

    <label for="in_service">In Service:</label>
    <input type="checkbox" id="in_service" name="in_service" <%= fleetData.in_service ? 'checked' : '' %>><br>

    <label for="preserved">Preserved:</label>
    <input type="checkbox" id="preserved" name="preserved" <%= fleetData.preserved ? 'checked' : '' %>><br><br>

    <label for="fleet_number">Fleet Number:</label>
    <input type="text" id="fleet_number" name="fleet_number" value="<%= fleetData.fleet_number %>" required>

    <label for="reg">Number Plate:</label>
    <input type="text" id="reg" name="reg" value="<%= fleetData.reg %>" required>

    <label for="operator">Operator:</label>

    <select name="operator" id="operator" required>
      <% operatorData.forEach(operator => { %>
      <option value="<%= operator.id %>" <%= operator.id === fleetData.operator.id ? 'selected' : '' %>>
        <%= operator.operator_name %>
      </option>
      <% }) %>
    </select>
    <small>This only needs to change for permanent transfers, not for short-term loans to another depot</small>

    <label for="loan_operator">Loan Operator:</label>
    <select name="loan_operator" id="loan_operator" required>
      <option value="null" <%= fleetData.loan_operator === null ? 'selected' : '' %>>None</option>
      <% operatorData.forEach(operator => { %>
      <option value="<%= operator.id %>" <%= (fleetData.loan_operator && operator.id === fleetData.loan_operator.id) ? 'selected' : '' %>>
        <%= operator.operator_name %>
      </option>
      <% }) %>
    </select>

    <small>This only needs to change for temporary transfers, short-term loans only</small>

    <label for="type">Type:</label>
    <select name="type" id="type">
      <% typeData.forEach(type => { %>
      <option value="<%= type.id %>" <%= type.id === fleetData.vehicle_type_data.id ? 'selected' : '' %>>
        <%= type.type_name %>
      </option>
      <% }) %>
    </select>
    <input style="margin-top: -.5em;border-radius: 0;" type="text" id="type_details" placeholder="Additional Type Details" name="type_details" value="<%= fleetData.type_details %>" title="This is for things such as `Electric Conversion`">
    <input style="margin-top: -.5em; border-radius: 0 0 .5em .5em;" type="text" inputmode="decimal" id="length" name="length" value="<%= fleetData.length %>" placeholder="Length" pattern="^\d{1,2}(\.\d{0,3})?$" title="Format: xx.xxx (e.g., 12.345 or 12.3)">
    <label style="margin-left: .5em;" for="open_top">Open Top:</label>
    <input type="checkbox" id="open_top" name="open_top" <%= fleetData.open_top ? 'checked' : '' %>><br><br>

    <label for="livery">Livery:</label>
    <select name="livery" id="livery" required>
      <% liveryData.forEach(livery => { %>
      <option value="<%= livery.id %>" <%= livery.id === fleetData.livery.id ? 'selected' : '' %>>
        <%= livery.name %>
      </option>
      <% }) %>
    </select>

    <script>
      document.getElementById('length').addEventListener('input', function(e) {
        this.value = this.value.replace(/[^\d.]/g, '');
    
        if (this.value.length > 5) {
          this.value = this.value.slice(0, 5);
        }
    
        const match = this.value.match(/^(\d{0,2})(\.?)(\d{0,3})/);
        if (match) {
          this.value = match[1] + match[2] + match[3];
        }
    
        // Only validate if the field is not empty
        if (this.value.trim() !== '') {
          const pattern = new RegExp(this.getAttribute('pattern'));
          if (pattern && !pattern.test(this.value)) {
            this.setCustomValidity('Invalid format. Please use xx.xxx (e.g., 12.345 or 12.3)');
          } else {
            this.setCustomValidity('');
          }
        } else {
          this.setCustomValidity(''); // Clear any custom error if field is empty
        }
      });
    </script>
    

    <label for="colour">Colour:</label>
    <input type="text" id="colour" name="colour" value="<%= fleetData.colour %>">

    <label for="branding">Branding:</label>
    <input type="text" id="branding" name="branding" value="<%= fleetData.branding %>">

    <label for="prev_reg">Previous Registration:</label>
    <input type="text" id="prev_reg" name="prev_reg" value="<%= fleetData.prev_reg %>">

    <label for="depot">Depot:</label>
    <input type="text" id="depot" name="depot" value="<%= fleetData.depot %>">

    <label for="name">Name:</label>
    <input type="text" id="name" name="name" value="<%= fleetData.name %>">

    <label for="notes">Notes:</label>
    <input type="text" id="notes" name="notes" value="<%= fleetData.notes %>">


    <label>Features:</label>
    <div class="features-list">
        <% features.forEach(function(feature) { %>
            <div class="feature-item">
                <input type="checkbox" id="feature-<%= feature.replace(/\s+/g, '-').toLowerCase() %>" 
                       name="features-checkbox" 
                       value="<%= feature %>"
                       <% if(fleetData.features && JSON.parse(fleetData.features).includes(feature)) { %>checked<% } %>>
                <label for="feature-<%= feature.replace(/\s+/g, '-').toLowerCase() %>"><%= feature %></label>
            </div>
        <% }); %>
    </div>
    <input type="hidden" name="features" id="features-hidden" value="<%= fleetData.features || '[]' %>">
    <script>
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="features-checkbox"]');
        const hiddenInput = document.getElementById('features-hidden');
        
        // Set initial state based on fleetData.features
        const initialFeatures = JSON.parse(hiddenInput.value);
        checkboxes.forEach(checkbox => {
            if (initialFeatures.includes(checkbox.value)) {
                checkbox.checked = true;
            }
        });

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const selectedFeatures = Array.from(checkboxes)
                    .filter(cb => cb.checked)
                    .map(cb => cb.value);
                hiddenInput.value = JSON.stringify(selectedFeatures);
            });
        });
    </script>
    
    <br>

    <label for="summary">Summary:</label>
    <textarea id="summary" name="summary" rows="5"></textarea>

    <button type="submit">Save Changes</button>
  </form>
</div>

<script>
  $(document).ready(function() {
    $('#operator').select2({
      placeholder: 'Select a operator',
      allowClear: true,
      width: '100%'
    });
    $('#loan_operator').select2({
      placeholder: 'Select a loan operator',
      allowClear: true,
      width: '100%'
    });
    $('#livery').select2({
      placeholder: 'Select a livery',
      allowClear: true,
      width: '100%'
    });
    $('#type').select2({
      placeholder: 'Select a type',
      allowClear: true,
      width: '100%'
    });
    $('#type').next('.select2-container').find('.select2-selection--single').css('border-radius', '.5em .5em 0 0');
    $('#type').on('select2:open', function() {
      $('.select2-dropdown').css('border-radius', '0 0 .5em .5em');
    });
  });
</script>